1.	Инструменты разработки программных средств.
2. 	В процессе разработки программных средств в той или иной мере
используется компьютерная поддержка процессов разработки ПС.
3. 	Компилятор избавляет разработчика ПС от необходимости писать программы на языке
компьютера, который для разработчика. 
4. 	Инструменты разработки ПС могут использоваться в течении
всего жизненного цикла
ПС для работы с разными программными документами.
5. 	Редакторы поддерживают конструирование (формирование) тех или иных программных документов на
различных этапах жизненного цикла.
Как уже упоминалось, для этого можно использовать один какой-нибудь универсальный текстовый
редактор.
Однако, более сильную поддержку могут обеспечить специализированные редакторы: для каждого вида
документов - свой редактор.
 6. 	Инструменты, поддерживающие процесс выполнения программ,
позволяют выполнять на компьютере описания процессов или
отдельных их частей, представленных в виде, отличном от машинного
кода, или машинный код с дополнительными возможностями его
интерпретации.
7. 	Инструментальные среды разработки и сопровождения программных средств.
во-первых, использование как программных, так и аппаратных инструментов, и,
во-вторых, определенная ориентация либо на конкретный язык программирования, либо
на конкретную предметную область.
Инструментальная среда не обязательно должна функционировать на том компьютере,
на котором должно будет применяться разрабатываемое с помощью ее ПС. Часто такое совмещение
бывает достаточно удобным
8. 	Различают три основных класса инструментальных сред разработки и
сопровождения ПС
среды программирования, ·
рабочие места компьютерной технологии,·
инструментальные системы технологии программирования.
Среда программирования предназначена
в основном для поддержки процессов программирования (кодирования),
тестирования и отладки ПС.
Рабочее место компьютерной технологии ориентировано на поддержку ранних этапов
разработки ПС (спецификаций) и автоматической генерации программ по
спецификациям.
9. 	Основные классы инструментальных сред разработки и сопровождения ПС.
10. 	Инструментальные среды программирования.
Инструментальные среды программирования содержат прежде всего
текстовый редактор,позволяющий конструировать программы на заданном языке программирования, инструменты, позволяющие компилировать или интерпретировать программы на
этом языке, а также тестировать и отлаживать полученные программы.
11. 	Инструментальные среды программирования общего назначения содержат набор программных
инструментов, поддерживающих разработку программ на разных языках программирования
12. 	Понятие компьютерной технологии разработки программных средств и ее рабочие места.
Имеются некоторые трудности в выработке строгого определения CASE-технологии
(компьютерной технологии разработки ПС).
CASE - это абревиатура от английского Computer-Aided Software Engineering (КомпьютерноПомогаемая Инженерия Программирования). Но без помощи (поддержки) компьютера ПС уже давно не разрабатываются (используется хотя бы компилятор).
13.	В настоящее время компьютерную технологию разработки
ПС можно характеризовать
- Использованием программной поддержки для разработки
графических требований и графических спецификаций
ПС,
- автоматической генерации программ на каком-либо языке
программирования или в машинном коде (частично или
полностью),
- программной поддержки прототипирования.
14.	Инструментальная система технологии программирования
- это интегрированная совокупность программных и аппаратных инструментов
15.	С учетом обсужденных свойств инструментальных систем технологии программирования можно выделить три их основные компоненты:база данных разработки (репозиторий),инструментарий, интерфейсы.
16.	Репозиторий - центральное компьютерное хранилище информации, связанной с
проектом (разработкой) ПС в течении всего его жизненного цикла.
Инструментарий - набор инструментов, определяющий возможности,
предоставляемые системой коллективу разработчиков.
17.	Различают два класса инструментальных систем технологии программирования:
1)инструментальные системы поддержки проекта и
2) языково-зависимые инструментальные системы.
Инструментальная система поддержки проекта - это открытая система, способная
поддерживать разработку ПС на разных языках программирования
18. Унифицированный язык моделирования UML
• Процесс – это описание шагов, которые необходимо выполнить при
разработке проекта.
• Унифицированный язык моделирования UML (Unified Modeling Language) –
это преемник того поколения методов ООАП, которые появились в конце 80х и начале 90-х гг.
19.	 Язык UML представляет собой общецелевой язык визуального
моделирования, который разработан для спецификации, визуализации,
проектирования и документирования компонентов программного
обеспечения, бизнес-процессов и других систем.
20.	UML содержит стандартный набор диаграмм и нотаций самых
разнообразных видов.
Диаграмма в UML – это графическое представление набора элементов,
изображаемое чаще всего в виде связанного графа с вершинами
(сущностями) и ребрами (отношениями).
UML выделяют следующие типы диаграмм:
• – диаграммы вариантов использования (usecase diagrams)
диаграммы классов (class diagrams)
• – диаграммы поведения системы (behavior diagrams)
• диаграммы взаимодействия (interaction diagrams)
• – диаграммы состояний (statechart diagrams)
• – диаграммы деятельностей (activity diagrams)
• – диаграммы реализации (implementation diagrams)